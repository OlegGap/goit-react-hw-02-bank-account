{"version":3,"sources":["components/Dashboard/Controls/controls.module.scss","components/Dashboard/Balance/balance.module.scss","components/Dashboard/TransactionHistory/transactionHistory.module.scss","components/Dashboard/Controls/Controls.jsx","utils/calculateMountTypeFormTransactions.js","components/Dashboard/Balance/Balance.jsx","utils/calculateBalance.js","components/Dashboard/TransactionHistory/TransactionHistory.jsx","utils/checkCorrectInput.js","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Controls","addTransaction","className","styles","controls","onSubmit","evt","preventDefault","type","placeholder","name","onClick","transactions","reduce","balance","transaction","amount","Balance","calculateMount","calculateBalance","history","map","id","date","key","length","checkCorrectInput","inputValue","inputName","toast","warn","position","POSITION","BOTTOM_LEFT","error","Dashboard","state","target","currentInput","Number","parentNode","querySelector","value","reset","uuidv4","Date","toLocaleString","setState","prevState","success","persistedTransactions","localStorage","getItem","this","JSON","parse","setItem","stringify","TransactionHistory","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c9e4e0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__2CYLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance__UpRKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"transactionHistory_history__2SXrJ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './controls.module.scss';\n\nconst Controls = ({ addTransaction }) => (\n  <section className={styles.controls}>\n    <form className=\"form\" onSubmit={evt => evt.preventDefault()}>\n      <input type=\"number\" placeholder=\"Enter your amount\" />\n      <button type=\"button\" name=\"deposit\" onClick={addTransaction}>\n        Deposit\n      </button>\n      <button type=\"button\" name=\"withdraw\" onClick={addTransaction}>\n        Withdraw\n      </button>\n    </form>\n  </section>\n);\n\nControls.propTypes = {\n  addTransaction: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\nexport default (transactions, type) =>\n  transactions.reduce(\n    (balance, transaction) =>\n      (balance += transaction.type === type ? transaction.amount : 0),\n    0,\n  );\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './balance.module.scss';\nimport calculateBalance from '../../../utils/calculateBalance';\nimport calculateMount from '../../../utils/calculateMountTypeFormTransactions';\n\nconst Balance = ({ transactions }) => (\n  <section className={styles.balance}>\n    <span>⬆{calculateMount(transactions, 'withdraw')}$</span>\n    <span>⬇{calculateMount(transactions, 'deposit')}$</span>\n    <span>Balance: {calculateBalance(transactions)}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.any).isRequired,\n};\n\nexport default Balance;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\nexport default transactions =>\n  transactions.reduce(\n    (balance, transaction) =>\n      (balance +=\n        transaction.type === 'deposit'\n          ? transaction.amount\n          : -transaction.amount),\n    0,\n  );\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './transactionHistory.module.scss';\n\nconst Balance = ({ transactions }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(({ id, type, amount, date }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}$</td>\n          <td>{date}</td>\n        </tr>\n      ))}\n      {!transactions.length && (\n        <tr>\n          <td>Здесь будет </td>\n          <td>Ваша история</td>\n          <td>транзакций</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Balance;\n","import { toast } from 'react-toastify';\n\nconst checkCorrectInput = (inputValue, inputName, balance) => {\n  if (inputValue < 0) {\n    toast.warn('Сумма не может быть отрицательной!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (inputValue === 0) {\n    toast.warn('Введите сумму для проведения операции!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  if (inputValue > balance && inputName === 'withdraw') {\n    toast.error('На счету недостаточно средств для проведения операции!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n    return false;\n  }\n  return true;\n};\n\nexport default checkCorrectInput;\n","import React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport checkCorrectInput from '../../utils/checkCorrectInput.js';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n  };\n\n  componentDidMount() {\n    const persistedTransactions = localStorage.getItem('transactions');\n\n    if (persistedTransactions) {\n      this.setState({\n        transactions: JSON.parse(persistedTransactions),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const { transactions } = this.state;\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n  }\n\n  addTransaction = ({ target }) => {\n    const currentInput = Number(target.parentNode.querySelector('input').value);\n    target.parentNode.reset();\n    if (checkCorrectInput(currentInput, target.name, this.state.balance)) {\n      const transaction = {\n        id: uuidv4(),\n        type: target.name,\n        amount: currentInput,\n        date: new Date().toLocaleString(),\n      };\n      this.setState(prevState => ({\n        transactions: [...prevState.transactions, transaction],\n      }));\n\n      if (transaction.type === 'withdraw') {\n        toast.success(`Успешно виведено ${currentInput}$!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      } else {\n        toast.success(`Депозит успешно добавден!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      }\n    }\n  };\n\n  render() {\n    const { transactions } = this.state;\n    return (\n      <div>\n        <Controls addTransaction={this.addTransaction} />\n        <Balance transactions={transactions} />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","import React from 'react';\nimport './styles.css';\nimport Dashboard from '../Dashboard/Dashboard.jsx';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}