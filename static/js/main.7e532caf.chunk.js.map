{"version":3,"sources":["components/Dashboard/Controls/controls.module.scss","components/Dashboard/Balance/balance.module.scss","components/Dashboard/TransactionHistory/transactionHistory.module.scss","components/Dashboard/Controls/Controls.js","components/Dashboard/Balance/Balance.js","components/Dashboard/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","addTransaction","handleChange","value","className","styles","controls","onSubmit","evt","preventDefault","type","onChange","placeholder","name","onClick","Balance","withdrawals","enterd","balance","defaultProps","transactions","history","map","id","amount","date","key","length","Dashboard","target","currentInput","state","toast","warn","position","POSITION","BOTTOM_LEFT","error","transaction","uuidv4","Date","toLocaleString","setState","prevState","currentWithdrawals","success","currentEntered","Number","persistedTransactions","localStorage","getItem","this","JSON","parse","setItem","stringify","TransactionHistory","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e532caf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__2CYLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance__UpRKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"transactionHistory_history__2SXrJ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './controls.module.scss';\n\nconst Controls = ({ addTransaction, handleChange, value }) => {\n  return (\n    <section className={styles.controls}>\n      <form className=\"form\" onSubmit={evt => evt.preventDefault()}>\n        <input\n          type=\"number\"\n          value={value === 0 ? '' : value}\n          onChange={handleChange}\n          placeholder=\"Enter your amount\"\n        />\n        <button type=\"button\" name=\"deposit\" onClick={addTransaction}>\n          Deposit\n        </button>\n        <button type=\"button\" name=\"withdraw\" onClick={addTransaction}>\n          Withdraw\n        </button>\n      </form>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  addTransaction: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './balance.module.scss';\n\nconst Balance = ({ withdrawals, enterd, balance }) => {\n  return (\n    <section className={styles.balance}>\n      <span>⬆{withdrawals}$</span>\n      <span>⬇{enterd}$</span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nBalance.defaultProps = {\n  withdrawals: 0,\n  enterd: 0,\n  balance: 0,\n};\n\nBalance.propTypes = {\n  withdrawals: PropTypes.number,\n  enterd: PropTypes.number,\n  balance: PropTypes.number,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './transactionHistory.module.scss';\n\nconst Balance = ({ transactions }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(({ id, type, amount, date }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}$</td>\n          <td>{date}</td>\n        </tr>\n      ))}\n      {transactions.length === 0 && (\n        <tr>\n          <td>Здесь будет </td>\n          <td>Ваша история</td>\n          <td>транзакций</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Balance;\n","import React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      transactions: [],\n      balance: 0,\n      currentInput: 0,\n      currentEntered: 0,\n      currentWithdrawals: 0,\n    };\n  }\n\n  componentDidMount() {\n    const persistedTransactions = localStorage.getItem('transactions');\n\n    if (persistedTransactions) {\n      this.setState({\n        transactions: JSON.parse(persistedTransactions),\n        balance: JSON.parse(localStorage.getItem('balance')),\n        currentEntered: JSON.parse(localStorage.getItem('entered')),\n        currentWithdrawals: JSON.parse(localStorage.getItem('withdrawals')),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const {\n      transactions,\n      balance,\n      currentEntered,\n      currentWithdrawals,\n    } = this.state;\n    localStorage.setItem('transactions', JSON.stringify(transactions));\n    localStorage.setItem('balance', JSON.stringify(balance));\n    localStorage.setItem('entered', JSON.stringify(currentEntered));\n    localStorage.setItem('withdrawals', JSON.stringify(currentWithdrawals));\n  }\n\n  addTransaction = ({ target }) => {\n    const { currentInput } = this.state;\n    if (currentInput === 0) {\n      toast.warn('Введите сумму для проведения операции!', {\n        position: toast.POSITION.BOTTOM_LEFT,\n      });\n    } else if (\n      currentInput > this.state.balance &&\n      target.name === 'withdraw'\n    ) {\n      toast.error('На счету недостаточно средств для проведения операции!', {\n        position: toast.POSITION.BOTTOM_LEFT,\n      });\n    } else {\n      const transaction = {\n        id: uuidv4(),\n        type: target.name,\n        amount: currentInput,\n        date: new Date().toLocaleString(),\n      };\n      this.setState(prevState => ({\n        transactions: [...prevState.transactions, transaction],\n      }));\n\n      if (transaction.type === 'withdraw') {\n        this.setState(prevState => ({\n          currentWithdrawals: prevState.currentWithdrawals + currentInput,\n          balance: prevState.balance - currentInput,\n        }));\n        toast.success(`Успешно виведено ${currentInput}$!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      } else {\n        this.setState(prevState => ({\n          currentEntered: prevState.currentEntered + currentInput,\n          balance: prevState.balance + currentInput,\n        }));\n        toast.success(`Депозит успешно добавден!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      }\n    }\n    this.setState({ currentInput: 0 });\n  };\n\n  handleChange = ({ target }) => {\n    const value = Number(target.value);\n    this.setState({ currentInput: value });\n  };\n\n  render() {\n    const {\n      transactions,\n      balance,\n      currentWithdrawals,\n      currentEntered,\n      currentInput,\n    } = this.state;\n    return (\n      <>\n        <Controls\n          addTransaction={this.addTransaction}\n          handleChange={this.handleChange}\n          value={currentInput}\n        />\n        <Balance\n          withdrawals={currentWithdrawals}\n          enterd={currentEntered}\n          balance={balance}\n        />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </>\n    );\n  }\n}\nexport default Dashboard;\n","import React from 'react';\nimport './styles.css';\nimport Dashboard from './Dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <>\n      <Dashboard />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}