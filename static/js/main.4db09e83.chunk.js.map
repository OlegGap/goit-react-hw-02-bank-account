{"version":3,"sources":["components/Dashboard/Controls/controls.module.scss","components/Dashboard/Balance/balance.module.scss","components/Dashboard/TransactionHistory/transactionHistory.module.scss","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","utils/checkCorrectInput.js","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Controls","addTransaction","handleChange","value","className","styles","controls","onSubmit","evt","preventDefault","type","onChange","placeholder","name","onClick","Balance","withdrawals","enterd","balance","defaultProps","transactions","history","map","id","amount","date","key","length","checkCorrectInput","inputValue","inputName","toast","warn","position","POSITION","BOTTOM_LEFT","error","Dashboard","target","currentInput","state","transaction","uuidv4","Date","toLocaleString","setState","prevState","currentWithdrawals","success","currentEntered","Number","this","TransactionHistory","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4db09e83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__2CYLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance__UpRKt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"transactionHistory_history__2SXrJ\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './controls.module.scss';\n\nconst Controls = ({ addTransaction, handleChange, value }) => (\n  <section className={styles.controls}>\n    <form className=\"form\" onSubmit={evt => evt.preventDefault()}>\n      <input\n        type=\"number\"\n        value={value === 0 ? '' : value}\n        onChange={handleChange}\n        placeholder=\"Enter your amount\"\n      />\n      <button type=\"button\" name=\"deposit\" onClick={addTransaction}>\n        Deposit\n      </button>\n      <button type=\"button\" name=\"withdraw\" onClick={addTransaction}>\n        Withdraw\n      </button>\n    </form>\n  </section>\n);\n\nControls.propTypes = {\n  addTransaction: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './balance.module.scss';\n\nconst Balance = ({ withdrawals, enterd, balance }) => (\n  <section className={styles.balance}>\n    <span>⬆{withdrawals}$</span>\n    <span>⬇{enterd}$</span>\n    <span>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.defaultProps = {\n  withdrawals: 0,\n  enterd: 0,\n  balance: 0,\n};\n\nBalance.propTypes = {\n  withdrawals: PropTypes.number,\n  enterd: PropTypes.number,\n  balance: PropTypes.number,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './transactionHistory.module.scss';\n\nconst Balance = ({ transactions }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(({ id, type, amount, date }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}$</td>\n          <td>{date}</td>\n        </tr>\n      ))}\n      {transactions.length === 0 && (\n        <tr>\n          <td>Здесь будет </td>\n          <td>Ваша история</td>\n          <td>транзакций</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Balance;\n","import { toast } from 'react-toastify';\n\nconst checkCorrectInput = (inputValue, inputName, balance) => {\n  if (inputValue < 0) {\n    toast.warn('Сумма не может быть отрицательной!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n  } else if (inputValue === 0) {\n    toast.warn('Введите сумму для проведения операции!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n  } else if (inputValue > balance && inputName === 'withdraw') {\n    toast.error('На счету недостаточно средств для проведения операции!', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n  } else return true;\n  return false;\n};\n\nexport default checkCorrectInput;\n","import React, { Component } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport checkCorrectInput from '../../utils/checkCorrectInput.js';\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      transactions: [],\n      balance: 0,\n      currentInput: 0,\n      currentEntered: 0,\n      currentWithdrawals: 0,\n    };\n  }\n\n  addTransaction = ({ target }) => {\n    const { currentInput } = this.state;\n\n    if (checkCorrectInput(currentInput, target.name, this.state.balance)) {\n      const transaction = {\n        id: uuidv4(),\n        type: target.name,\n        amount: currentInput,\n        date: new Date().toLocaleString(),\n      };\n      this.setState(prevState => ({\n        transactions: [...prevState.transactions, transaction],\n      }));\n\n      if (transaction.type === 'withdraw') {\n        this.setState(prevState => ({\n          currentWithdrawals: prevState.currentWithdrawals + currentInput,\n          balance: prevState.balance - currentInput,\n        }));\n        toast.success(`Успешно виведено ${currentInput}$!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      } else {\n        this.setState(prevState => ({\n          currentEntered: prevState.currentEntered + currentInput,\n          balance: prevState.balance + currentInput,\n        }));\n        toast.success(`Депозит успешно добавден!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      }\n    }\n    this.setState({ currentInput: 0 });\n  };\n\n  handleChange = ({ target }) => {\n    const value = Number(target.value);\n    this.setState({ currentInput: value });\n  };\n\n  render() {\n    const {\n      transactions,\n      balance,\n      currentWithdrawals,\n      currentEntered,\n      currentInput,\n    } = this.state;\n    return (\n      <>\n        <Controls\n          addTransaction={this.addTransaction}\n          handleChange={this.handleChange}\n          value={currentInput}\n        />\n        <Balance\n          withdrawals={currentWithdrawals}\n          enterd={currentEntered}\n          balance={balance}\n        />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </>\n    );\n  }\n}\nexport default Dashboard;\n","import React from 'react';\nimport './styles.css';\nimport Dashboard from '../Dashboard/Dashboard.jsx';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}